create schema if not exists "inv";

create table "inv"."inventory_items" (
    "item_sku" character varying not null,
    "item_name" text not null,
    "item_description" text,
    "item_type" text not null,
    "quantity" bigint,
    "board_feet" numeric
);


alter table "inv"."inventory_items" enable row level security;

CREATE UNIQUE INDEX inventory_items_pkey ON inv.inventory_items USING btree (item_sku);

alter table "inv"."inventory_items" add constraint "inventory_items_pkey" PRIMARY KEY using index "inventory_items_pkey";

create table "inv"."customer_items" (
    "customer_item_id" bigint generated by default as identity not null,
    "item_sku" character varying not null,
    "customer_id" bigint not null,
    "project_id" bigint,
    "quantity" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."customer_items" enable row level security;

create table "inv"."inventory_audit" (
    "inventory_audit_id" bigint generated by default as identity not null,
    "item_sku" character varying not null,
    "customer_id" bigint not null,
    "project_id" bigint,
    "work_order_id" bigint,
    "transaction_type" text not null,
    "transaction_time" timestamp with time zone not null default now(),
    "performed_by" bigint,
    "quantity" integer,
    "previous_quantity" integer,
    "new_quantity" integer
);


alter table "inv"."inventory_audit" enable row level security;

create table "inv"."inventory_orders" (
    "inventory_order_id" bigint generated by default as identity not null,
    "order_number" text not null,
    "work_order_id" bigint,
    "ordered_by_id" bigint,
    "received_by_id" bigint,
    "order_status" text not null default 'Ordered'::text,
    "order_date" date not null default CURRENT_DATE,
    "delivery_date" date,
    "received_date" date,
    "supplier_id" bigint,
    "supplier_contact_id" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_orders" enable row level security;

create table "inv"."inventory_order_items" (
    "inventory_order_item_id" bigint generated by default as identity not null,
    "inventory_order_id" bigint not null,
    "item_sku" character varying,
    "quantity_ordered" integer,
    "quantity_received" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_order_items" enable row level security;

CREATE UNIQUE INDEX inventory_orders_pkey ON inv.inventory_orders USING btree (inventory_order_id);

alter table "inv"."inventory_orders" add constraint "inventory_orders_pkey" PRIMARY KEY using index "inventory_orders_pkey";

alter table "inv"."inventory_orders" add constraint "inventory_orders_ordered_by_id_fkey" FOREIGN KEY (ordered_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_orders" validate constraint "inventory_orders_ordered_by_id_fkey";

alter table "inv"."inventory_orders" add constraint "inventory_orders_received_by_id_fkey" FOREIGN KEY (received_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_orders" validate constraint "inventory_orders_received_by_id_fkey";

alter table "inv"."inventory_orders" add constraint "inventory_orders_supplier_contact_id_fkey" FOREIGN KEY (supplier_contact_id) REFERENCES crm.contacts(contact_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_orders" validate constraint "inventory_orders_supplier_contact_id_fkey";

alter table "inv"."inventory_orders" add constraint "inventory_orders_supplier_id_fkey" FOREIGN KEY (supplier_id) REFERENCES crm.suppliers(supplier_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_orders" validate constraint "inventory_orders_supplier_id_fkey";

alter table "inv"."inventory_orders" add constraint "inventory_orders_work_order_id_fkey" FOREIGN KEY (work_order_id) REFERENCES pm.work_orders(work_order_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_orders" validate constraint "inventory_orders_work_order_id_fkey";

create table "inv"."inventory_remaining" (
    "inventory_remaining_id" bigint generated by default as identity not null,
    "item_sku" character varying not null,
    "work_order_id" bigint,
    "quantity" integer,
    "counted_by_id" bigint,
    "date_counted" date not null default CURRENT_DATE,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_remaining" enable row level security;

create table "inv"."inventory_returns" (
    "inventory_return_id" bigint generated by default as identity not null,
    "return_number" text not null,
    "returned_by_id" bigint,
    "shipped_by_id" bigint,
    "status" text not null default 'Submitted'::text,
    "submitted_date" date not null default CURRENT_DATE,
    "return_date" date,
    "shipped_date" date,
    "customer_id" bigint,
    "supplier_id" bigint,
    "supplier_contact_id" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_returns" enable row level security;

CREATE UNIQUE INDEX inventory_returns_pkey ON inv.inventory_returns USING btree (inventory_return_id);

alter table "inv"."inventory_returns" add constraint "inventory_returns_pkey" PRIMARY KEY using index "inventory_returns_pkey";

alter table "inv"."inventory_returns" add constraint "inventory_returns_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES crm.customers(customer_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_returns" validate constraint "inventory_returns_customer_id_fkey";

alter table "inv"."inventory_returns" add constraint "inventory_returns_returned_by_id_fkey" FOREIGN KEY (returned_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_returns" validate constraint "inventory_returns_returned_by_id_fkey";

alter table "inv"."inventory_returns" add constraint "inventory_returns_shipped_by_id_fkey" FOREIGN KEY (shipped_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_returns" validate constraint "inventory_returns_shipped_by_id_fkey";

alter table "inv"."inventory_returns" add constraint "inventory_returns_supplier_contact_id_fkey" FOREIGN KEY (supplier_contact_id) REFERENCES crm.contacts(contact_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_returns" validate constraint "inventory_returns_supplier_contact_id_fkey";

alter table "inv"."inventory_returns" add constraint "inventory_returns_supplier_id_fkey" FOREIGN KEY (supplier_id) REFERENCES crm.suppliers(supplier_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_returns" validate constraint "inventory_returns_supplier_id_fkey";

create table "inv"."inventory_return_items" (
    "inventory_return_item_id" bigint generated by default as identity not null,
    "inventory_return_id" bigint not null,
    "item_sku" character varying,
    "quantity_to_return" integer,
    "quantity_shipped" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_return_items" enable row level security;

create table "inv"."inventory_used" (
    "inventory_used_id" bigint generated by default as identity not null,
    "item_sku" character varying not null,
    "work_order_id" bigint,
    "quantity" integer,
    "loaded_by_id" bigint,
    "date_loaded" date not null default CURRENT_DATE,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "inv"."inventory_used" enable row level security;

CREATE UNIQUE INDEX customer_items_pkey ON inv.customer_items USING btree (customer_item_id);

CREATE UNIQUE INDEX inventory_audit_pkey ON inv.inventory_audit USING btree (inventory_audit_id);

CREATE UNIQUE INDEX inventory_order_items_pkey ON inv.inventory_order_items USING btree (inventory_order_item_id);

CREATE UNIQUE INDEX inventory_remaining_pkey ON inv.inventory_remaining USING btree (inventory_remaining_id);

CREATE UNIQUE INDEX inventory_return_items_pkey ON inv.inventory_return_items USING btree (inventory_return_item_id);

CREATE UNIQUE INDEX inventory_used_pkey ON inv.inventory_used USING btree (inventory_used_id);

alter table "inv"."customer_items" add constraint "customer_items_pkey" PRIMARY KEY using index "customer_items_pkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_pkey" PRIMARY KEY using index "inventory_audit_pkey";

alter table "inv"."inventory_order_items" add constraint "inventory_order_items_pkey" PRIMARY KEY using index "inventory_order_items_pkey";

alter table "inv"."inventory_remaining" add constraint "inventory_remaining_pkey" PRIMARY KEY using index "inventory_remaining_pkey";

alter table "inv"."inventory_return_items" add constraint "inventory_return_items_pkey" PRIMARY KEY using index "inventory_return_items_pkey";

alter table "inv"."inventory_used" add constraint "inventory_used_pkey" PRIMARY KEY using index "inventory_used_pkey";

alter table "inv"."customer_items" add constraint "customer_items_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES crm.customers(customer_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."customer_items" validate constraint "customer_items_customer_id_fkey";

alter table "inv"."customer_items" add constraint "customer_items_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."customer_items" validate constraint "customer_items_item_sku_fkey";

alter table "inv"."customer_items" add constraint "customer_items_project_id_fkey" FOREIGN KEY (project_id) REFERENCES pm.projects(project_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."customer_items" validate constraint "customer_items_project_id_fkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES crm.customers(customer_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_audit" validate constraint "inventory_audit_customer_id_fkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_audit" validate constraint "inventory_audit_item_sku_fkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_performed_by_fkey" FOREIGN KEY (performed_by) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_audit" validate constraint "inventory_audit_performed_by_fkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_project_id_fkey" FOREIGN KEY (project_id) REFERENCES pm.projects(project_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_audit" validate constraint "inventory_audit_project_id_fkey";

alter table "inv"."inventory_audit" add constraint "inventory_audit_work_order_id_fkey" FOREIGN KEY (work_order_id) REFERENCES pm.work_orders(work_order_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_audit" validate constraint "inventory_audit_work_order_id_fkey";

alter table "inv"."inventory_order_items" add constraint "inventory_order_items_inventory_order_id_fkey" FOREIGN KEY (inventory_order_id) REFERENCES inv.inventory_orders(inventory_order_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_order_items" validate constraint "inventory_order_items_inventory_order_id_fkey";

alter table "inv"."inventory_order_items" add constraint "inventory_order_items_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_order_items" validate constraint "inventory_order_items_item_sku_fkey";

alter table "inv"."inventory_remaining" add constraint "inventory_remaining_counted_by_id_fkey" FOREIGN KEY (counted_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_remaining" validate constraint "inventory_remaining_counted_by_id_fkey";

alter table "inv"."inventory_remaining" add constraint "inventory_remaining_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_remaining" validate constraint "inventory_remaining_item_sku_fkey";

alter table "inv"."inventory_remaining" add constraint "inventory_remaining_work_order_id_fkey" FOREIGN KEY (work_order_id) REFERENCES pm.work_orders(work_order_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_remaining" validate constraint "inventory_remaining_work_order_id_fkey";

alter table "inv"."inventory_return_items" add constraint "inventory_return_items_inventory_return_id_fkey" FOREIGN KEY (inventory_return_id) REFERENCES inv.inventory_returns(inventory_return_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_return_items" validate constraint "inventory_return_items_inventory_return_id_fkey";

alter table "inv"."inventory_return_items" add constraint "inventory_return_items_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_return_items" validate constraint "inventory_return_items_item_sku_fkey";

alter table "inv"."inventory_used" add constraint "inventory_used_item_sku_fkey" FOREIGN KEY (item_sku) REFERENCES inv.inventory_items(item_sku) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "inv"."inventory_used" validate constraint "inventory_used_item_sku_fkey";

alter table "inv"."inventory_used" add constraint "inventory_used_loaded_by_id_fkey" FOREIGN KEY (loaded_by_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_used" validate constraint "inventory_used_loaded_by_id_fkey";

alter table "inv"."inventory_used" add constraint "inventory_used_work_order_id_fkey" FOREIGN KEY (work_order_id) REFERENCES pm.work_orders(work_order_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "inv"."inventory_used" validate constraint "inventory_used_work_order_id_fkey";
create schema if not exists "hr";

create table "hr"."positions" (
    "position_id" bigint generated by default as identity not null,
    "position_title" text not null,
    "position_status" text not null,
    "agreement_status" text not null,
    "is_manager" boolean,
    "results_statement" text,
    "strategic_work" text,
    "tactical_work" text,
    "position_standards" text,
    "manager_id" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "hr"."positions" enable row level security;

CREATE UNIQUE INDEX positions_pkey ON hr.positions USING btree (position_id);

alter table "hr"."positions" add constraint "positions_pkey" PRIMARY KEY using index "positions_pkey";

alter table "hr"."positions" add constraint "positions_manager_id_fkey" FOREIGN KEY (manager_id) REFERENCES hr.positions(position_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "hr"."positions" validate constraint "positions_manager_id_fkey";

create table "hr"."employees" (
    "employee_id" bigint generated by default as identity not null,
    "first_name" text not null,
    "last_name" text not null,
    "email" text not null,
    "phone" text,
    "is_active" boolean default true,
    "employee_number" text not null,
    "work_email" text,
    "dob" date,
    "address" text,
    "hire_date" date,
    "termination_date" date,
    "rate" numeric,
    "manager_id" bigint,
    "position_id" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "hr"."employees" enable row level security;

CREATE UNIQUE INDEX employees_pkey ON hr.employees USING btree (employee_id);

alter table "hr"."employees" add constraint "employees_pkey" PRIMARY KEY using index "employees_pkey";

alter table "hr"."employees" add constraint "employees_manager_id_fkey" FOREIGN KEY (manager_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "hr"."employees" validate constraint "employees_manager_id_fkey";

alter table "hr"."employees" add constraint "employees_position_id_fkey" FOREIGN KEY (position_id) REFERENCES hr.positions(position_id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "hr"."employees" validate constraint "employees_position_id_fkey";

create table "hr"."calendar" (
    "date" date not null,
    "day_of_week" integer,
    "day_of_month" integer,
    "month" integer,
    "year" integer,
    "quarter" integer
);


alter table "hr"."calendar" enable row level security;

create table "hr"."pay_periods" (
    "pay_period_id" character varying not null,
    "start_date" timestamp with time zone not null,
    "end_date" timestamp with time zone
);


alter table "hr"."pay_periods" enable row level security;

create table "hr"."timesheet_tasks" (
    "timesheet_task_id" bigint generated by default as identity not null,
    "task_name" text not null,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "hr"."timesheet_tasks" enable row level security;

CREATE UNIQUE INDEX calendar_pkey ON hr.calendar USING btree (date);

CREATE UNIQUE INDEX pay_periods_pkey ON hr.pay_periods USING btree (pay_period_id);

CREATE UNIQUE INDEX timesheet_tasks_pkey ON hr.timesheet_tasks USING btree (timesheet_task_id);

alter table "hr"."calendar" add constraint "calendar_pkey" PRIMARY KEY using index "calendar_pkey";

alter table "hr"."pay_periods" add constraint "pay_periods_pkey" PRIMARY KEY using index "pay_periods_pkey";

alter table "hr"."timesheet_tasks" add constraint "timesheet_tasks_pkey" PRIMARY KEY using index "timesheet_tasks_pkey";
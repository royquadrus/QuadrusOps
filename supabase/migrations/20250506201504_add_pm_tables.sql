create table "pm"."work_orders" (
    "work_order_id" bigint generated by default as identity not null,
    "work_order_number" text not null,
    "work_order_status" text not null default 'Quoting'::text,
    "work_order_type" text not null,
    "work_order_level" text,
    "production_start" date,
    "ship_date" date,
    "square_footage" integer,
    "revenue" integer,
    "project_id" bigint not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."work_orders" enable row level security;

CREATE UNIQUE INDEX work_orders_pkey ON pm.work_orders USING btree (work_order_id);

CREATE UNIQUE INDEX work_orders_work_order_number_key ON pm.work_orders USING btree (work_order_number);

alter table "pm"."work_orders" add constraint "work_orders_pkey" PRIMARY KEY using index "work_orders_pkey";

alter table "pm"."work_orders" add constraint "work_orders_project_id_fkey" FOREIGN KEY (project_id) REFERENCES pm.projects(project_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."work_orders" validate constraint "work_orders_project_id_fkey";

alter table "pm"."work_orders" add constraint "work_orders_work_order_number_key" UNIQUE using index "work_orders_work_order_number_key";

create table "pm"."stacks" (
    "stack_id" bigint generated by default as identity not null,
    "stack_number" text not null,
    "work_order_id" bigint not null,
    "stack_status" text not null,
    "stack_file" jsonb,
    "stack_panel_file" jsonb,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."stacks" enable row level security;

CREATE UNIQUE INDEX stacks_pkey ON pm.stacks USING btree (stack_id);

alter table "pm"."stacks" add constraint "stacks_pkey" PRIMARY KEY using index "stacks_pkey";

alter table "pm"."stacks" add constraint "stacks_work_order_id_fkey" FOREIGN KEY (work_order_id) REFERENCES pm.work_orders(work_order_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."stacks" validate constraint "stacks_work_order_id_fkey";

create table "pm"."floor_stacks" (
    "stack_id" bigint generated by default as identity not null,
    "floor_type" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."floor_stacks" enable row level security;

create table "pm"."roof_stacks" (
    "stack_id" bigint generated by default as identity not null,
    "roof_type" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."roof_stacks" enable row level security;

create table "pm"."wall_stacks" (
    "stack_id" bigint generated by default as identity not null,
    "wall_type" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."wall_stacks" enable row level security;

CREATE UNIQUE INDEX floor_stacks_pkey ON pm.floor_stacks USING btree (stack_id);

CREATE UNIQUE INDEX roof_stacks_pkey ON pm.roof_stacks USING btree (stack_id);

CREATE UNIQUE INDEX wall_stacks_pkey ON pm.wall_stacks USING btree (stack_id);

alter table "pm"."floor_stacks" add constraint "floor_stacks_pkey" PRIMARY KEY using index "floor_stacks_pkey";

alter table "pm"."roof_stacks" add constraint "roof_stacks_pkey" PRIMARY KEY using index "roof_stacks_pkey";

alter table "pm"."wall_stacks" add constraint "wall_stacks_pkey" PRIMARY KEY using index "wall_stacks_pkey";

alter table "pm"."floor_stacks" add constraint "floor_stacks_stack_id_fkey" FOREIGN KEY (stack_id) REFERENCES pm.stacks(stack_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."floor_stacks" validate constraint "floor_stacks_stack_id_fkey";

alter table "pm"."roof_stacks" add constraint "roof_stacks_stack_id_fkey" FOREIGN KEY (stack_id) REFERENCES pm.stacks(stack_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."roof_stacks" validate constraint "roof_stacks_stack_id_fkey";

alter table "pm"."wall_stacks" add constraint "wall_stacks_stack_id_fkey" FOREIGN KEY (stack_id) REFERENCES pm.stacks(stack_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."wall_stacks" validate constraint "wall_stacks_stack_id_fkey";

create table "pm"."panels" (
    "panel_id" bigint generated by default as identity not null,
    "panel_number" text not null,
    "stack_id" bigint not null,
    "panel_status" text not null default 'Queued'::text,
    "weight" integer,
    "panel_file" jsonb,
    "sequence_number" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."panels" enable row level security;

CREATE UNIQUE INDEX panels_pkey ON pm.panels USING btree (panel_id);

alter table "pm"."panels" add constraint "panels_pkey" PRIMARY KEY using index "panels_pkey";

alter table "pm"."panels" add constraint "panels_stack_id_fkey" FOREIGN KEY (stack_id) REFERENCES pm.stacks(stack_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."panels" validate constraint "panels_stack_id_fkey";

create table "pm"."floor_panels" (
    "panel_id" bigint generated by default as identity not null,
    "floor_type" text not null,
    "length" integer,
    "width" integer,
    "depth" integer,
    "square_footage" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."floor_panels" enable row level security;

create table "pm"."roof_panels" (
    "panel_id" bigint generated by default as identity not null,
    "roof_type" text not null,
    "length" integer,
    "width" integer,
    "depth" integer,
    "square_footage" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."roof_panels" enable row level security;

create table "pm"."wall_panels" (
    "panel_id" bigint generated by default as identity not null,
    "wall_type" text not null,
    "length" integer,
    "height" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "pm"."wall_panels" enable row level security;

CREATE UNIQUE INDEX floor_panels_pkey ON pm.floor_panels USING btree (panel_id);

CREATE UNIQUE INDEX roof_panels_pkey ON pm.roof_panels USING btree (panel_id);

CREATE UNIQUE INDEX wall_panels_pkey ON pm.wall_panels USING btree (panel_id);

alter table "pm"."floor_panels" add constraint "floor_panels_pkey" PRIMARY KEY using index "floor_panels_pkey";

alter table "pm"."roof_panels" add constraint "roof_panels_pkey" PRIMARY KEY using index "roof_panels_pkey";

alter table "pm"."wall_panels" add constraint "wall_panels_pkey" PRIMARY KEY using index "wall_panels_pkey";

alter table "pm"."floor_panels" add constraint "floor_panels_panel_id_fkey" FOREIGN KEY (panel_id) REFERENCES pm.panels(panel_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."floor_panels" validate constraint "floor_panels_panel_id_fkey";

alter table "pm"."roof_panels" add constraint "roof_panels_panel_id_fkey" FOREIGN KEY (panel_id) REFERENCES pm.panels(panel_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."roof_panels" validate constraint "roof_panels_panel_id_fkey";

alter table "pm"."wall_panels" add constraint "wall_panels_panel_id_fkey" FOREIGN KEY (panel_id) REFERENCES pm.panels(panel_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "pm"."wall_panels" validate constraint "wall_panels_panel_id_fkey";
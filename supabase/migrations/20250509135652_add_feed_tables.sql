create schema if not exists "comm";

create table "comm"."comments" (
    "comment_id" bigint generated by default as identity not null,
    "post_id" bigint not null,
    "author_id" bigint not null,
    "content" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "comm"."comments" enable row level security;

create table "comm"."likes" (
    "like_id" bigint generated by default as identity not null,
    "post_id" bigint not null,
    "employee_id" bigint not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "comm"."likes" enable row level security;

create table "comm"."posts" (
    "post_id" bigint generated by default as identity not null,
    "author_id" bigint not null,
    "content" text not null,
    "post_type" text not null,
    "is_automated" boolean default false,
    "created_at" timestamp with time zone not null default now()
);


alter table "comm"."posts" enable row level security;

CREATE UNIQUE INDEX comments_pkey ON comm.comments USING btree (comment_id);

CREATE UNIQUE INDEX likes_pkey ON comm.likes USING btree (like_id);

CREATE UNIQUE INDEX posts_pkey ON comm.posts USING btree (post_id);

alter table "comm"."comments" add constraint "comments_pkey" PRIMARY KEY using index "comments_pkey";

alter table "comm"."likes" add constraint "likes_pkey" PRIMARY KEY using index "likes_pkey";

alter table "comm"."posts" add constraint "posts_pkey" PRIMARY KEY using index "posts_pkey";

alter table "comm"."comments" add constraint "comments_author_id_fkey" FOREIGN KEY (author_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "comm"."comments" validate constraint "comments_author_id_fkey";

alter table "comm"."comments" add constraint "comments_post_id_fkey" FOREIGN KEY (post_id) REFERENCES comm.posts(post_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "comm"."comments" validate constraint "comments_post_id_fkey";

alter table "comm"."likes" add constraint "likes_employee_id_fkey" FOREIGN KEY (employee_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "comm"."likes" validate constraint "likes_employee_id_fkey";

alter table "comm"."likes" add constraint "likes_post_id_fkey" FOREIGN KEY (post_id) REFERENCES comm.posts(post_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "comm"."likes" validate constraint "likes_post_id_fkey";

alter table "comm"."posts" add constraint "posts_author_id_fkey" FOREIGN KEY (author_id) REFERENCES hr.employees(employee_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "comm"."posts" validate constraint "posts_author_id_fkey";


